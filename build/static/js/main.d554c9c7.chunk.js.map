{"version":3,"sources":["createElement.tsx","util.ts","diff/index.ts","components/Header/index.tsx","components/Main/index.tsx","components/Title/index.tsx","components/Describe/index.tsx","components/Tree/index.tsx","App.tsx","index.tsx"],"names":["LightType","h","type","props","children","isArray","arr","v","Object","prototype","toString","call","simpleCloneDeepVNode","obj","JSON","parse","stringify","appendChild","parant","vnode","isNew","i","length","push","snapshots","describe","rootVNode","splice","insertBefore","newVNode","referenceVNode","reference","childVNode","getNextBrother","setProperty","key","value","oldValue","light","undefined","diffProps","newProps","oldProps","diffChildren","newParentVNode","oldParentVNode","oldChildren","newChildren","reuse","firstOldVNode","oldVNode","j","EMPTY_OBJ","diff","outer","sibVNode","unmount","diffElementNodes","useStyles","makeStyles","createStyles","header","flexGrow","headerTitle","Header","classes","className","AppBar","position","Toolbar","Typography","variant","main","margin","width","maxWidth","Main","title","fontSize","lineHeight","color","marginTop","marginBottom","Title","Describe","Tree","params","data","DEFAULT","keys","style","backgroundColor","map","index","child","button","id","class","href","snapshotIndex","App","useState","setVNode","setDescribe","src","Button","onClick","size","disableElevation","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d554c9c7.chunk.js","sourcesContent":["export type VNodeType = string;\n\nexport type VNodeChildren = VNode[];\n\nexport type VNodeProps = Data;\n\nexport enum LightType {\n  DEFAULT = '#3e51b5'\n}\n\nexport interface Data {\n  [key: string]: any;\n}\n\nexport interface VNode {\n  type: VNodeType;\n  props: VNodeProps;\n  children: VNodeChildren;\n  light?: LightType;\n}\n\nconst h = (\n  type: VNodeType,\n  props: VNodeProps,\n  children: VNodeChildren\n): VNode => {\n  return {\n    type,\n    props,\n    children\n  }\n}\n\nexport default h\n","import { VNode } from './createElement'\n\nconst getType = (v: any): string => {\n  return Object.prototype.toString.call(v);\n}\n\nexport const isArray = (arr: any): arr is Array<any> => {\n  return getType(arr) === '[object Array]'\n}\n\nexport const simpleCloneDeepVNode = (obj: VNode): VNode => {\n  return JSON.parse(JSON.stringify(obj));\n}\n","import { VNode, VNodeProps } from '../createElement';\nimport { simpleCloneDeepVNode } from '../util';\nimport { oldVNode as rootVNode } from '../App'; \n\nconst createEmptyVNode = () => {\n  return {\n    props: {},\n    children: []\n  }\n}\n\nconst appendChild = (parant: VNode, vnode: VNode) => {\n  let isNew = -1;\n  for (let i = 0; i < parant.children.length; i++) {\n    const childVNode = parant.children[i];\n    if (childVNode === vnode) {\n      isNew = i\n      break\n    }\n  }\n  if (isNew === -1) {\n    parant.children.push(vnode);\n    snapshots.push({\n      describe: `使用appendChild方法, 向${parant.type}的子节点列表的末尾，添加新的子节点${vnode.type}`,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n  } else {\n    parant.children.splice(isNew, 1);\n    parant.children.push(vnode);\n    snapshots.push({\n      describe: `使用appendChild方法, 移动${vnode.type}节点的位置，移动到当前子节点列表的末尾`,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n  }\n}\n\nconst insertBefore = (parant: VNode, newVNode: VNode, referenceVNode: VNode) => {\n  let isNew = -1;\n  let reference = -1\n  for (let i = 0; i < parant.children.length; i++) {\n    const childVNode = parant.children[i];\n    if (childVNode === newVNode) {\n      isNew = i\n    }\n    if (childVNode === referenceVNode) {\n      reference = i\n    }\n  }\n  if (reference === -1) {\n    parant.children.push(newVNode);\n    snapshots.push({\n      describe: `使用insertBefore方法, 添加节点${newVNode.type}，添加到当前子节点列表的末尾`,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n    return\n  }\n  if (isNew === -1) {\n    parant.children.splice(reference, 0, newVNode)\n    snapshots.push({\n      describe: `使用insertBefore方法, 添加节点${newVNode.type}，添加到当前列表索引${reference}之前`,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n  } else {\n    parant.children.splice(reference, 0, newVNode);\n    for (let i = 0; i < parant.children.length; i++) {\n      const childVNode = parant.children[i];\n      if (childVNode === newVNode && i !== reference) {\n        parant.children.splice(i, 1);\n        break;\n      }\n    }\n    snapshots.push({\n      describe: `使用insertBefore方法, 移动${newVNode.type}节点的位置，移动到当前列表索引${reference}之前`,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n  }\n}\n\nconst getNextBrother = (parant: VNode, vnode: VNode): VNode | null => {\n  for (let i = 0; i < parant.children.length; i++) {\n    const childVNode = parant.children[i];\n    if (\n      childVNode === vnode &&\n      i < parant.children.length - 1\n    ) {\n      return parant.children[i + 1]\n    }\n  }\n  return null;\n}\n\nconst unmount = (parant: VNode) => {\n  for (let i = 0; i < parant.children.length; i++) {\n    const childVNode = parant.children[i];\n    if (\n      (childVNode as any).reuse === false\n    ) {\n      parant.children.splice(i, 1);\n      i--;\n      snapshots.push({\n        describe: `删除节点${childVNode.type}`,\n        vnode: simpleCloneDeepVNode(rootVNode)\n      });\n    }\n  }\n}\n\nexport interface ISnapshot {\n  describe: string;\n  vnode: VNode;\n}\n\nexport const snapshots:ISnapshot[] = []\n\nconst setProperty = (vnode: VNode, key: string, value: any, oldValue?: any) => {\n  if (value === null || value === false) {\n    delete vnode.props[key];\n    delete vnode.light\n    snapshots.push({\n      describe: `删除${vnode.type}节点的属性${key}`,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n  } else {\n    vnode.props[key] = value;\n    snapshots.push({\n      describe: `\n        ${oldValue == undefined ? '添加' : '修改'}${vnode.type}节点的属性${key}, 由${oldValue}到${value}\n      `,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n  }\n}\n\nexport const diffElementNodes = (newVNode: VNode, oldVNode: VNode): VNode => {\n  const newProps = newVNode.props;\n  const oldProps = oldVNode.props || {};\n  if (oldVNode.type == undefined) {\n    oldVNode.type = newVNode.type;\n    snapshots.push({\n      describe: `创建${newVNode.type}类型节点`,\n      vnode: simpleCloneDeepVNode(rootVNode)\n    });\n  }\n  diffProps(oldVNode, newProps, oldProps);\n  diffChildren(newVNode, oldVNode);\n  return oldVNode;\n}\n\nexport const diffProps = (vnode: VNode, newProps: VNodeProps, oldProps: VNodeProps) => {\n  for (let key in oldProps) {\n    if (!(key in newProps)) {\n      setProperty(vnode, key, null)\n    }\n  }\n  for (let key in newProps) {\n    if (newProps[key] !== oldProps[key]) {\n      setProperty(vnode, key, newProps[key], oldProps[key])\n    }\n  }\n}\n\nexport const diffChildren = (newParentVNode: VNode, oldParentVNode: VNode) => {\n  let oldChildren = oldParentVNode.children;\n  let newChildren = newParentVNode.children;\n  for (let i = 0; i < oldChildren.length; i++) {\n    (oldChildren[i] as any).reuse = false\n  }\n  let firstOldVNode = oldChildren.length ? oldChildren[0] : null\n  for (let i = 0; i < newChildren.length; i++) {\n    let childVNode = newChildren[i];\n    let oldVNode;\n    if (childVNode != null) {\n      oldVNode = oldChildren[i];\n      if (\n        oldVNode &&\n        oldVNode.props.key === childVNode.props.key &&\n        oldVNode.type === childVNode.type\n      ) {\n        (oldChildren[i] as any).reuse = true\n      } else {\n        for (let j = 0; j < oldChildren.length; j++) {\n          oldVNode = oldChildren[j];\n          if (\n            oldVNode &&\n            oldVNode.props.key === childVNode.props.key &&\n            oldVNode.type === childVNode.type &&\n            !(oldVNode as any).reuse\n          ) {\n            (oldChildren[j] as any).reuse = true\n            break\n          }\n          oldVNode = null;\n        }\n      }\n      const EMPTY_OBJ = createEmptyVNode();\n      oldVNode = oldVNode || EMPTY_OBJ;\n      let vnode = diff(childVNode, oldVNode as any);\n      if (vnode != firstOldVNode) {\n        outer: if (\n          firstOldVNode == null ||\n          vnode === EMPTY_OBJ as any\n        ) {\n          appendChild(oldParentVNode, vnode)\n        } else {\n          let sibVNode = firstOldVNode as any;\n          sibVNode = getNextBrother(oldParentVNode, sibVNode as any)\n          for (let j = 0; j < oldChildren.length && sibVNode; j+=2) {\n            if (sibVNode === vnode) {\n              break outer;\n            }\n            sibVNode = getNextBrother(oldParentVNode, sibVNode as any)\n          }\n          insertBefore(oldParentVNode, vnode, firstOldVNode)\n        }\n      }\n      firstOldVNode = getNextBrother(oldParentVNode, vnode)\n    }\n  }\n  unmount(oldParentVNode);\n}\n\nexport const diff = (newVNode: VNode, oldVNode: VNode): VNode => {\n  return diffElementNodes(newVNode, oldVNode);\n}\n","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    header: {\n      flexGrow: 1,\n    },\n    headerTitle: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Header: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.headerTitle}>\n            Diff Steps\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    main: {\n      margin: `40px auto`,\n      width: `100%`,\n      maxWidth: `960px`\n    },\n  }),\n);\n\nconst Main: React.FC = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n  return <div className={classes.main}>{ children }</div>\n}\n\nexport default Main;","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    title: {\n      fontSize: `33px`,\n      lineHeight: 1.4,\n      color: `#000`,\n      marginTop: `30px`,\n      marginBottom: `10px`\n    },\n  }),\n);\n\nconst Title: React.FC = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n  return <h3 className={classes.title}>{ children }</h3>\n}\n\nexport default Title;","import React from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    describe: {\n      fontSize: `17px`,\n      lineHeight: `1.7`,\n      marginTop: `20px`,\n    },\n  }),\n);\n\nconst Describe: React.FC = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n  return <p className={classes.describe}>{ children }</p>\n}\n\nexport default Describe;","import React from 'react';\nimport { VNode, LightType } from '../../createElement';\nimport { isArray } from '../../util';\nimport './styles.css';\n\nexport interface ITree {\n  data: VNode;\n}\n\nconst Tree: React.FC<ITree> = (params) => {\n  \n  const {\n    data: {\n      type,\n      props,\n      children,\n      light = LightType.DEFAULT\n    }\n  } = params;\n\n  const keys = Object.keys(props!)\n\n  return (\n    <div>\n      <div className=\"tree-node\" style={{\n        backgroundColor: light\n      }}>\n        <div className=\"tree-node-type\">\n          <p>{ type }</p>\n        </div>\n        <div className=\"tree-node-props\">\n          {\n            keys && keys.map((key, index) => (\n              <p key={index}>{ key }: { props[key] }</p>\n            ))\n          }\n        </div>\n      </div>\n      <div className=\"tree-node-children\">\n        {\n          isArray(children) && children.map((child, index) => \n            // TODO:\n            <Tree key={index} data={child}/>\n          )\n        }\n      </div>\n    </div>\n    \n  )\n}\n\nexport default Tree\n","import React, { useState } from 'react';\nimport './App.css';\nimport h from './createElement';\nimport { diff, snapshots } from './diff';\nimport { simpleCloneDeepVNode } from './util';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Title from './components/Title';\nimport Describe from './components/Describe';\nimport Tree from './components/Tree';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    button: {\n      margin: `30px 0`\n    }\n  }),\n);\n\n// <div class=\"root\">\n//  <nav class=\"nav\">\n//    <a href=\"/login\" class=\"avtive\"></a>\n//  </nav>\n//  <ul class=\"list\">\n//    <li key=\"1\"></li>\n//    <li key=\"2\"></li>\n//    <li key=\"3\"></li>\n//    <li key=\"4\"></li>\n//    <li key=\"5\"></li>\n//  </ul>\n// </div>\nexport const oldVNode = h('div', {\n  id: 'root'\n}, [\n  h('nav', {\n    class: 'nav'\n  }, [\n    h('a', {\n      href: '/login',\n      class: 'active'\n    }, [])\n  ]),\n  h('ul', {\n    class: 'list'\n  }, [\n    h('li', { key: '1' }, []),\n    h('li', { key: '2' }, []),\n    h('li', { key: '3' }, []),\n    h('li', { key: '4' }, []),\n    h('li', { key: '5' }, [])\n  ])\n]);\n\n// <div class=\"root\">\n//  <nav class=\"nav\">\n//    <a href=\"/login\" class=\"nav-item\"></a>\n//    <a href=\"/home\" class=\"avtive\"></a>\n//  </nav>\n//  <ul class=\"list\">\n//    <li key=\"5\"></li>\n//    <li key=\"2\"></li>\n//    <li key=\"4\"></li>\n//    <li key=\"1\"></li>\n//    <li key=\"3\"></li>\n//  </ul>\n// </div>\nconst newVNode = h('div', {\n  id: 'root'\n}, [\n  h('nav', {\n    class: 'nav'\n  }, [\n    h('a', {\n      href: '/login',\n      class: 'nav-item'\n    }, []),\n    h('a', {\n      href: '/home',\n      class: 'active'\n    }, [])\n  ]),\n  h('ul', {\n    class: 'list'\n  }, [\n    h('li', { key: '5' }, []),\n    h('li', { key: '2' }, []),\n    h('li', { key: '4' }, []),\n    h('li', { key: '1' }, []),\n    h('li', { key: '3' }, [])\n  ])\n])\n\nlet snapshotIndex = 0\n\nconst App: React.FC = () => {\n  const [ vnode, setVNode ] = useState(simpleCloneDeepVNode(oldVNode));\n  const [ describe, setDescribe ] = useState('');\n  const classes = useStyles();\n\n  diff(newVNode, oldVNode);\n\n  const handleNextSnapshot = () => {\n    if (snapshotIndex >= snapshots.length) {\n      return setDescribe('完成')\n    }\n    const { describe, vnode } = snapshots[snapshotIndex]\n    setDescribe(describe);\n    setVNode(vnode)\n    snapshotIndex += 1\n  }\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <Main>\n        <Title>什么是 Diff Steps</Title>\n        <Describe>\n          DiffSteps，是一个将diff算法的更新过程，拆解为可逐步展示的小工具。\n        </Describe>\n        <Describe>\n          事情的起因是这样的。之前12月参加了一场面试。面试官问我，当一个由数组的渲染的列表，当数组的首尾颠倒，DOM是如何变化的？\n        </Describe>\n        <Describe>我当时回答的不是特别好，所以后来专门上网研究了一下。</Describe>\n        <Describe>\n          网上有许多介绍diff算法的文章，但是一大坨文字配上大量源码，让人实在没有看下去的欲望。于是乎，我做了这个小工具，希望大家可以轻松了解Diff更新的过程。\n        </Describe>\n        <Title>旧节点</Title>\n        <img src=\"https://i.loli.net/2020/01/11/53NCti9PXRSQ6VY.png\"/>\n        <Title>新节点</Title>\n        <img src=\"https://i.loli.net/2020/01/11/B94ixrqkUNDAY2u.png\"/>\n        <Title>变化过程</Title>\n        <Button\n          onClick={handleNextSnapshot}\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          disableElevation\n          className={classes.button}\n        >\n          下 一 步\n        </Button>\n        { describe ? `（${describe}）` : '' }\n        <Tree data={vnode}/>\n      </Main>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// target\n// 1. 基于DOM的tree（使用canvas计算坐标太复杂，放弃）\n// 2. 保存diff过程中的每一个快照（在快照上给发生变化的元素添加一个高亮的标记）到数组中\n// 3. 将快照依次播放展现\n\n// todo\n// 1. 添加动画效果 https://github.com/googlearchive/flipjs\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}